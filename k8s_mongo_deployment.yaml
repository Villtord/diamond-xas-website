#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  labels:
#    app: xasdb-mongodb-dep
#    release: test
#  name: xasdb-mongodb-deployment
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: xasdb-mongo
#  minReadySeconds: 10
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxUnavailable: 1
#      maxSurge: 1
#  template:
#    metadata:
#      labels:
#        app: xasdb-mongo
#    spec:
#      containers:
#      - name: mongodb
#        envFrom:
#          - configMapRef:
#              name: mongo-xasdb-configmap
#        image: mongo:5
#        imagePullPolicy: Always
#        ports:
#            - containerPort: 27017
#

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mongo-xasdb
    release: test
  name: mongo-xasdb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-xasdb
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo-xasdb
    spec:
      containers:
      - image: mongo:latest
        name: mongo
        args: ["--dbpath","/data/db"]
        livenessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        envFrom:
          - configMapRef:
              name: mongo-xasdb-configmap
#        env:
#        - name: MONGO_INITDB_ROOT_USERNAME
#          valueFrom:
#            secretKeyRef:
#              name: mongo-creds
#              key: username
#        - name: MONGO_INITDB_ROOT_PASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: mongo-creds
#              key: password
        volumeMounts:
        - name: mongo-data-dir
          mountPath: "/data/db"
      volumes:
        - name: mongo-data-dir
          emptyDir: {}